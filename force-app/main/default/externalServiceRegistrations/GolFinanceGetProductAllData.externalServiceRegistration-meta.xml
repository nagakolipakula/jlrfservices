<?xml version="1.0" encoding="UTF-8"?>
<ExternalServiceRegistration xmlns="http://soap.sforce.com/2006/04/metadata">
    <label>GolFinanceGetProductAllData</label>
    <namedCredentialReference>GOL_MS_Finance</namedCredentialReference>
    <operations>
        <active>true</active>
        <name>getproducts</name>
    </operations>
    <registrationProviderType>Custom</registrationProviderType>
    <schema>{
  &quot;swagger&quot;: &quot;2.0&quot;,
  &quot;info&quot;: {
    &quot;title&quot;: &quot;eu-jlr-eapi-commerce-cloud-v2-spec&quot;,
    &quot;description&quot;: &quot;The API used by Commerce Cloud Client as an entry-point to all services by JLR.\nSupports GS Retailer/Reset and stands on a new implementation of SAPI Smart\n&quot;,
    &quot;version&quot;: &quot;v2&quot;
  },
  &quot;paths&quot;: {
    &quot;/v2&quot;: {},
    &quot;/v2/finance/products&quot;: {
      &quot;get&quot;: {
        &quot;operationId&quot;: &quot;getProducts&quot;,
        &quot;description&quot;: &quot;Get the available products based in inputs&quot;,
        &quot;produces&quot;: [
          &quot;application/json&quot;
        ],
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;quoteId&quot;,
            &quot;required&quot;: true,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;typeOfUse&quot;,
            &quot;required&quot;: true,
            &quot;in&quot;: &quot;query&quot;,
            &quot;enum&quot;: [
              &quot;PRIVATE&quot;,
              &quot;PROFESSIONAL&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;personType&quot;,
            &quot;required&quot;: false,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;channel&quot;,
            &quot;required&quot;: false,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;&quot;,
            &quot;x-amf-mediaType&quot;: &quot;application/json&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;$ref&quot;: &quot;#/definitions/FinancialProductType&quot;
              }
            }
          },
          &quot;400&quot;: {
            &quot;description&quot;: &quot;&quot;,
            &quot;x-amf-mediaType&quot;: &quot;application/json&quot;,
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/ErrorResponse400Finance&quot;
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;&quot;,
            &quot;x-amf-mediaType&quot;: &quot;application/json&quot;,
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/ErrorResponse404Finance&quot;
            }
          },
          &quot;500&quot;: {
            &quot;description&quot;: &quot;&quot;,
            &quot;x-amf-mediaType&quot;: &quot;application/json&quot;,
            &quot;schema&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/ErrorResponse500Finance&quot;
            }
          }
        }
      }
    }
  },
  &quot;definitions&quot;: {
    &quot;FinancialProductType&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;typeOfUse&quot;: {
          &quot;description&quot;: &quot;type of use&quot;,
          &quot;example&quot;: &quot;PROFESSIONAL&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;personType&quot;: {
          &quot;description&quot;: &quot;person type&quot;,
          &quot;example&quot;: &quot;LEGAL&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;channel&quot;: {
          &quot;description&quot;: &quot;channel used&quot;,
          &quot;example&quot;: &quot;POS&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;provider&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductProvider&quot;
        },
        &quot;id&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductIdType&quot;
        },
        &quot;name&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductNameType&quot;
        },
        &quot;description&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductDescriptionType&quot;
        },
        &quot;vehicleType&quot;: {
          &quot;description&quot;: &quot;type of vehicle&quot;,
          &quot;enum&quot;: [
            &quot;CAR&quot;,
            &quot;PC&quot;,
            &quot;LCV&quot;,
            &quot;OTHER&quot;
          ],
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;selected&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/selectedFlagType&quot;
        },
        &quot;units&quot;: {
          &quot;description&quot;: &quot;Units used&quot;,
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;mileageUnit&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/unitMileageType&quot;
            },
            &quot;currencyCode&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/currencyCodeType&quot;
            },
            &quot;creditTimeUnit&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/unitCreditType&quot;
            },
            &quot;rateType&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/financialProductRateType&quot;
            }
          }
        },
        &quot;ageRanges&quot;: {
          &quot;description&quot;: &quot;Selector for age ranges for IT market&quot;,
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;upperBound&quot;: {
                &quot;example&quot;: 40,
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;name&quot;: {
                &quot;example&quot;: &quot;18-40&quot;,
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;lowerBound&quot;: {
                &quot;example&quot;: 18,
                &quot;type&quot;: &quot;integer&quot;
              }
            }
          }
        },
        &quot;cpiProducts&quot;: {
          &quot;description&quot;: &quot;List of available Credit Protection Insurance products relative to a financial product&quot;,
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/type&quot;
          }
        },
        &quot;nonCpiProducts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/type&quot;
          }
        },
        &quot;inputFields&quot;: {
          &quot;description&quot;: &quot;Fields that can be input bu the user&quot;,
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;durationsRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Durantion&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;selectedValue&quot;: {
                  &quot;description&quot;: &quot;Value selected by the user&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;step&quot;: {
                  &quot;description&quot;: &quot;Step between two proposed values&quot;,
                  &quot;example&quot;: 6,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;description&quot;: &quot;Value selected by default&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;minimum&quot;: {
                  &quot;description&quot;: &quot;Minimum proposed value&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;unit&quot;: {
                  &quot;description&quot;: &quot;Unit&quot;,
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;description&quot;: &quot;Maximum proposed value&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;intervals&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;ranges&quot;: {
                      &quot;type&quot;: &quot;array&quot;,
                      &quot;items&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;min&quot;: {
                            &quot;example&quot;: 25,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;max&quot;: {
                            &quot;example&quot;: 28,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;order&quot;: {
                            &quot;example&quot;: 0,
                            &quot;type&quot;: &quot;integer&quot;
                          }
                        }
                      }
                    }
                  }
                },
                &quot;description&quot;: {
                  &quot;description&quot;: &quot;Description (semantic, use...)&quot;,
                  &quot;example&quot;: &quot;Durée (mois)&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;annualMileagesRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Mileage&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 5000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 10000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 5000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 50000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;intervals&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;dependsOn&quot;: {
                      &quot;type&quot;: &quot;array&quot;,
                      &quot;items&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      }
                    },
                    &quot;ranges&quot;: {
                      &quot;type&quot;: &quot;array&quot;,
                      &quot;items&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;min&quot;: {
                            &quot;example&quot;: 10000,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;max&quot;: {
                            &quot;example&quot;: 75000,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;order&quot;: {
                            &quot;example&quot;: 0,
                            &quot;type&quot;: &quot;integer&quot;
                          }
                        }
                      }
                    }
                  }
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Kilométrage annuel (km)&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;downPaymentRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Down Payment&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 1,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 41340,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;1er loyer&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;loanGrossAmountRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Loan Gross Amount&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 100,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 500,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 500,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 500000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Loan Amount&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;downPaymentGrossAmountRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Down Payment Gross Amount&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 1,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 41340,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;1er loyer&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;downPaymentRateRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Down Payment Rate Range&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 1,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 99.99,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Apport&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;finalTermGrossAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;finalTermNetAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;finalTermRateRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;loanInstallmentPeriodNetAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;loanNetAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;commissionGrossAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;commissionRateRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            }
          }
        },
        &quot;fullId&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductIdType&quot;
        },
        &quot;maxContractMileage&quot;: {
          &quot;example&quot;: 180000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarPrize&quot;: {
          &quot;example&quot;: 57000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarPrice&quot;: {
          &quot;example&quot;: 57000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarNetPrice&quot;: {
          &quot;example&quot;: 57000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarGrossPrice&quot;: {
          &quot;example&quot;: 68400,
          &quot;type&quot;: &quot;integer&quot;
        }
      }
    },
    &quot;ErrorResponse400Finance&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;originalPayload&quot;
      ],
      &quot;properties&quot;: {
        &quot;code&quot;: {
          &quot;example&quot;: &quot;400&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;correlationId&quot;: {
          &quot;example&quot;: &quot;0db546f6-58fe-4222-b1be-05e2b736d528&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;message&quot;: {
          &quot;example&quot;: {
            &quot;value&quot;: &quot;/typeOfUse PRIVATEs is not a valid enum value&quot;
          },
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;errorType&quot;: {
          &quot;example&quot;: &quot;APIKIT:BAD_REQUEST&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;errorPayload&quot;: {
          &quot;example&quot;: &quot;&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;originalPayload&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;required&quot;: [
            &quot;product&quot;
          ],
          &quot;properties&quot;: {
            &quot;quoteId&quot;: {
              &quot;example&quot;: &quot;ab01sUVD-0101-E010-0134-hi01mnDYZABQ&quot;,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;typeOfUse&quot;: {
              &quot;example&quot;: &quot;PRIVATEs&quot;,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;product&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;required&quot;: [
                &quot;units&quot;,
                &quot;cpiProducts&quot;,
                &quot;inputFields&quot;
              ],
              &quot;properties&quot;: {
                &quot;fullId&quot;: {
                  &quot;example&quot;: &quot;C&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;name&quot;: {
                  &quot;example&quot;: &quot;Crédit à professionnel&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Crédit à professionnel&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;selected&quot;: {
                  &quot;example&quot;: true,
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;units&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;mileageUnit&quot;: {
                      &quot;example&quot;: &quot;KILOMETERS&quot;,
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;currencyCode&quot;: {
                      &quot;example&quot;: &quot;EUR&quot;,
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;creditTimeUnit&quot;: {
                      &quot;example&quot;: &quot;MONTH&quot;,
                      &quot;type&quot;: &quot;string&quot;
                    }
                  }
                },
                &quot;cpiProducts&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;name&quot;: {
                        &quot;example&quot;: &quot;Décès, Invalidité, Maladie&quot;,
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;id&quot;: {
                        &quot;example&quot;: &quot;ASM&quot;,
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;financialProductId&quot;: {
                        &quot;example&quot;: &quot;C&quot;,
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;description&quot;: {
                        &quot;example&quot;: &quot;DIM&quot;,
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;selected&quot;: {
                        &quot;example&quot;: true,
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                },
                &quot;inputFields&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;required&quot;: [
                    &quot;durationsRange&quot;,
                    &quot;downPaymentGrossAmountRange&quot;
                  ],
                  &quot;properties&quot;: {
                    &quot;durationsRange&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;selectedValue&quot;: {
                          &quot;example&quot;: 42,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;step&quot;: {
                          &quot;example&quot;: 1,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;defaultValue&quot;: {
                          &quot;example&quot;: 37,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;minValue&quot;: {
                          &quot;example&quot;: 12,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;maxValue&quot;: {
                          &quot;example&quot;: 84,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;unit&quot;: {
                          &quot;example&quot;: &quot;MONTH&quot;,
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;description&quot;: {
                          &quot;example&quot;: &quot;Durée (mois)&quot;,
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    },
                    &quot;downPaymentGrossAmountRange&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;selectedValue&quot;: {
                          &quot;example&quot;: 10000,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;step&quot;: {
                          &quot;example&quot;: 1,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;defaultValue&quot;: {
                          &quot;example&quot;: 0,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;minValue&quot;: {
                          &quot;example&quot;: 0,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;maxValue&quot;: {
                          &quot;example&quot;: 64338,
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;unit&quot;: {
                          &quot;example&quot;: &quot;EUR&quot;,
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;description&quot;: {
                          &quot;example&quot;: &quot;Apport&quot;,
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        &quot;timestamp&quot;: {
          &quot;example&quot;: &quot;2025-02-10T11:49:10.190300959Z&quot;,
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;ErrorResponse404Finance&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;errorPayload&quot;
      ],
      &quot;properties&quot;: {
        &quot;code&quot;: {
          &quot;example&quot;: &quot;404&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;correlationId&quot;: {
          &quot;example&quot;: &quot;765699e5-16a5-416d-86af-9b81b5e6617d&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;message&quot;: {
          &quot;example&quot;: &quot;Quote does not exist&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;errorPayload&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;errorType&quot;: {
              &quot;example&quot;: &quot;EMPTY_COLLECTION&quot;,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;message&quot;: {
              &quot;example&quot;: &quot;Quote does not exist&quot;,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;error&quot;: {
              &quot;example&quot;: true,
              &quot;type&quot;: &quot;boolean&quot;
            }
          }
        },
        &quot;timestamp&quot;: {
          &quot;example&quot;: &quot;2025-02-10T11:48:33.376555067Z&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;env&quot;: {
          &quot;example&quot;: &quot;SIT&quot;,
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;ErrorResponse500Finance&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;errorPayload&quot;
      ],
      &quot;properties&quot;: {
        &quot;code&quot;: {
          &quot;example&quot;: &quot;500&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;correlationId&quot;: {
          &quot;example&quot;: &quot;765699e5-16a5-416d-86af-9b81b5e6617d&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;message&quot;: {
          &quot;example&quot;: &quot;Internal Server error&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;errorPayload&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;errorType&quot;: {
              &quot;example&quot;: &quot;INTERNAL_SERVER_ERROR&quot;,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;message&quot;: {
              &quot;example&quot;: &quot;The server is currently unavailable&quot;,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;error&quot;: {
              &quot;example&quot;: true,
              &quot;type&quot;: &quot;boolean&quot;
            }
          }
        },
        &quot;timestamp&quot;: {
          &quot;example&quot;: &quot;2025-02-10T11:48:33.376555067Z&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;env&quot;: {
          &quot;example&quot;: &quot;SIT&quot;,
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },

    &quot;amount&quot;: {
      &quot;description&quot;: &quot;The payment amount.&quot;,
      &quot;example&quot;: 2000,
      &quot;type&quot;: &quot;integer&quot;
    },
    &quot;currency&quot;: {
      &quot;description&quot;: &quot;Currency of the payment amount.&quot;,
      &quot;example&quot;: &quot;eur&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;quoteId&quot;: {
      &quot;description&quot;: &quot;The ID of the quote.&quot;,
      &quot;example&quot;: &quot;ab01s017-0101-8010-0156-VWJKbclAXXXX&quot;,
      &quot;type&quot;: &quot;string&quot;
    },

    &quot;ErrorMessageTemplate&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;code&quot;: {
          &quot;description&quot;: &quot;HTTP Status code&quot;,
          &quot;example&quot;: 500,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;message&quot;: {
          &quot;description&quot;: &quot;Error message&quot;,
          &quot;example&quot;: &quot;Resource not found&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;correlationId&quot;: {
          &quot;description&quot;: &quot;CorrelationId of the request&quot;,
          &quot;example&quot;: &quot;11fcbb6c-7c0c-42ff-b61b-4c6258ed3550&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;timestamp&quot;: {
          &quot;description&quot;: &quot;Timestamp of the error&quot;,
          &quot;example&quot;: &quot;2023-03-07T16:50:34.486048Z&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date-time&quot;
        }
      }
    },

    &quot;financialProductProvider&quot;: {
      &quot;description&quot;: &quot;Standard name of the financial provider - ARVAL or BNPP&quot;,
      &quot;example&quot;: &quot;BNPP&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;financialProductIdType&quot;: {
      &quot;description&quot;: &quot;Identifier of the financial product&quot;,
      &quot;example&quot;: &quot;A&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;financialProductNameType&quot;: {
      &quot;description&quot;: &quot;Standard name of the financial product&quot;,
      &quot;example&quot;: &quot;LOA ballon avec ER&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;financialProductDescriptionType&quot;: {
      &quot;description&quot;: &quot;Description of the Financial Product&quot;,
      &quot;example&quot;: &quot;LOA ballon avec engagement de rachat&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;selectedFlagType&quot;: {
      &quot;description&quot;: &quot;Flag to signal if this is selected or not&quot;,
      &quot;x-amf-examples&quot;: {
        &quot;example_0&quot;: true,
        &quot;example_1&quot;: false
      },
      &quot;type&quot;: &quot;boolean&quot;
    },
    &quot;unitMileageType&quot;: {
      &quot;description&quot;: &quot;Mileage Unit&quot;,
      &quot;example&quot;: &quot;KILOMETERS&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;currencyCodeType&quot;: {
      &quot;description&quot;: &quot;Iso code of the currency used with amounts&quot;,
      &quot;example&quot;: &quot;EUR&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;unitCreditType&quot;: {
      &quot;description&quot;: &quot;Duration of Credit Unit&quot;,
      &quot;example&quot;: &quot;MONTHLY&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;financialProductRateType&quot;: {
      &quot;example&quot;: &quot;FIXED&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;type&quot;: {
      &quot;description&quot;: &quot;A Credit Protection Insurance (CPI) product is a package of a set of risks that can be covered in the scope of a financial product&quot;,
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;financialProductId&quot;: {
          &quot;description&quot;: &quot;Identifier of the financial product&quot;,
          &quot;example&quot;: &quot;A&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;name&quot;: {
          &quot;description&quot;: &quot;Name of the financial product&quot;,
          &quot;example&quot;: &quot;Décès, Invalidité, Maladie&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;description&quot;: {
          &quot;description&quot;: &quot;Description of the financial product&quot;,
          &quot;example&quot;: &quot;DIM&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;id&quot;: {
          &quot;description&quot;: &quot;Identifier of the CPI product&quot;,
          &quot;example&quot;: &quot;ASM&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;monthlyCost&quot;: {
          &quot;description&quot;: &quot;Monthly Cost to be paid at each installment (except first and last installments)&quot;,
          &quot;example&quot;: 127400.13,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;selected&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/selectedFlagType&quot;
        },
        &quot;premiumPeriodAmount&quot;: {
          &quot;example&quot;: 7.19,
          &quot;type&quot;: &quot;number&quot;
        }
      }
    },
    &quot;type_1&quot;: {
      &quot;description&quot;: &quot;Object acting as a &apos;slider&apos; (from a low to a high value, defined by steps)Only float/double can be used (there&apos;s a slider object dedicated to the integers)&quot;,
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;minimum&quot;: {
          &quot;description&quot;: &quot;Minimum proposed value (type = float / double)&quot;,
          &quot;example&quot;: 10,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;conditions&quot;: {
          &quot;description&quot;: &quot;Conditions constrained by the slider values (float/double)&quot;,
          &quot;type&quot;: &quot;array&quot;,
          &quot;uniqueItems&quot;: true,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;constrainedValueRangeInf&quot;: {
                &quot;example&quot;: 10,
                &quot;type&quot;: &quot;number&quot;,
                &quot;format&quot;: &quot;double&quot;
              },
              &quot;constrainedValueRangeSup&quot;: {
                &quot;example&quot;: 10,
                &quot;type&quot;: &quot;number&quot;,
                &quot;format&quot;: &quot;double&quot;
              },
              &quot;constrainedOperator&quot;: {
                &quot;description&quot;: &quot;list of operators&quot;,
                &quot;example&quot;: &quot;LOWER&quot;,
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;integerConstraints&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;constrainingValueRangeInf&quot;: {
                      &quot;type&quot;: &quot;integer&quot;
                    },
                    &quot;constrainingValueRangeSup&quot;: {
                      &quot;type&quot;: &quot;integer&quot;
                    },
                    &quot;constrainingOperator&quot;: {
                      &quot;type&quot;: &quot;integer&quot;
                    },
                    &quot;constrainingPropertyName&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  }
                }
              }
            }
          }
        },
        &quot;maximum&quot;: {
          &quot;description&quot;: &quot;Maximum proposed value (type = float / double)&quot;,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;step&quot;: {
          &quot;description&quot;: &quot;Step between two proposed values (type = float / double)&quot;,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;explicitValues&quot;: {
          &quot;description&quot;: &quot;List of explicit values (in an ordered list)&quot;,
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;number&quot;,
            &quot;format&quot;: &quot;double&quot;
          }
        },
        &quot;defaultValue&quot;: {
          &quot;description&quot;: &quot;Default value set to the slider (type = float / double)&quot;,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;description&quot;: {
          &quot;description&quot;: &quot;Description (semantic, use...)&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;conditionsOperator&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;quoteId_2&quot;: {
      &quot;description&quot;: &quot;The ID of the quote.&quot;,
      &quot;example&quot;: &quot;ab01s017-0101-8010-0156-VWJKbclAXXXX&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;typeOfUseType&quot;: {
      &quot;description&quot;: &quot;List of type of uses. (MVP is only PRIVATE)&quot;,
      &quot;enum&quot;: [
        &quot;PRIVATE&quot;,
        &quot;PROFESSIONAL&quot;
      ],
      &quot;example&quot;: &quot;PRIVATE&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;type_3&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;provider&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductProvider&quot;
        },
        &quot;id&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductIdType&quot;
        },
        &quot;name&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductNameType&quot;
        },
        &quot;description&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductDescriptionType&quot;
        },
        &quot;vehicleType&quot;: {
          &quot;description&quot;: &quot;type of vehicle&quot;,
          &quot;enum&quot;: [
            &quot;CAR&quot;,
            &quot;PC&quot;,
            &quot;LCV&quot;,
            &quot;OTHER&quot;
          ],
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;selected&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/selectedFlagType&quot;
        },
        &quot;units&quot;: {
          &quot;description&quot;: &quot;Units used&quot;,
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;mileageUnit&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/unitMileageType&quot;
            },
            &quot;currencyCode&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/currencyCodeType&quot;
            },
            &quot;creditTimeUnit&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/unitCreditType&quot;
            },
            &quot;rateType&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/financialProductRateType&quot;
            }
          }
        },
        &quot;ageRanges&quot;: {
          &quot;description&quot;: &quot;Selector for age ranges for IT market&quot;,
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;upperBound&quot;: {
                &quot;example&quot;: 40,
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;name&quot;: {
                &quot;example&quot;: &quot;18-40&quot;,
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;lowerBound&quot;: {
                &quot;example&quot;: 18,
                &quot;type&quot;: &quot;integer&quot;
              }
            }
          }
        },
        &quot;cpiProducts&quot;: {
          &quot;description&quot;: &quot;List of available Credit Protection Insurance products relative to a financial product&quot;,
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/type&quot;
          }
        },
        &quot;nonCpiProducts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/type&quot;
          }
        },
        &quot;inputFields&quot;: {
          &quot;description&quot;: &quot;Fields that can be input bu the user&quot;,
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;durationsRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Durantion&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;selectedValue&quot;: {
                  &quot;description&quot;: &quot;Value selected by the user&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;step&quot;: {
                  &quot;description&quot;: &quot;Step between two proposed values&quot;,
                  &quot;example&quot;: 6,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;description&quot;: &quot;Value selected by default&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;minimum&quot;: {
                  &quot;description&quot;: &quot;Minimum proposed value&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;unit&quot;: {
                  &quot;description&quot;: &quot;Unit&quot;,
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;description&quot;: &quot;Maximum proposed value&quot;,
                  &quot;example&quot;: 48,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;intervals&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;ranges&quot;: {
                      &quot;type&quot;: &quot;array&quot;,
                      &quot;items&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;min&quot;: {
                            &quot;example&quot;: 25,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;max&quot;: {
                            &quot;example&quot;: 28,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;order&quot;: {
                            &quot;example&quot;: 0,
                            &quot;type&quot;: &quot;integer&quot;
                          }
                        }
                      }
                    }
                  }
                },
                &quot;description&quot;: {
                  &quot;description&quot;: &quot;Description (semantic, use...)&quot;,
                  &quot;example&quot;: &quot;Durée (mois)&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;annualMileagesRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Mileage&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 5000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 10000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 5000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 50000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;intervals&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;dependsOn&quot;: {
                      &quot;type&quot;: &quot;array&quot;,
                      &quot;items&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      }
                    },
                    &quot;ranges&quot;: {
                      &quot;type&quot;: &quot;array&quot;,
                      &quot;items&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;min&quot;: {
                            &quot;example&quot;: 10000,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;max&quot;: {
                            &quot;example&quot;: 75000,
                            &quot;type&quot;: &quot;integer&quot;
                          },
                          &quot;order&quot;: {
                            &quot;example&quot;: 0,
                            &quot;type&quot;: &quot;integer&quot;
                          }
                        }
                      }
                    }
                  }
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Kilométrage annuel (km)&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;downPaymentRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Down Payment&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 1,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 41340,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;1er loyer&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;loanGrossAmountRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Loan Gross Amount&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 100,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 500,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 500,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 500000,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Loan Amount&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;downPaymentGrossAmountRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Down Payment Gross Amount&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 1,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 41340,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;1er loyer&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;downPaymentRateRange&quot;: {
              &quot;description&quot;: &quot;Slider/Selector for Down Payment Rate Range&quot;,
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;step&quot;: {
                  &quot;example&quot;: 1,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;defaultValue&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;minimum&quot;: {
                  &quot;example&quot;: 0,
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;unit&quot;: {
                  &quot;example&quot;: &quot;SCALAR&quot;,
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;maximum&quot;: {
                  &quot;example&quot;: 99.99,
                  &quot;type&quot;: &quot;number&quot;
                },
                &quot;description&quot;: {
                  &quot;example&quot;: &quot;Apport&quot;,
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            },
            &quot;finalTermGrossAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;finalTermNetAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;finalTermRateRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;loanInstallmentPeriodNetAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;loanNetAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;commissionGrossAmountRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            },
            &quot;commissionRateRange&quot;: {
              &quot;$ref&quot;: &quot;#/definitions/type_1&quot;
            }
          }
        },
        &quot;fullId&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/financialProductIdType&quot;
        },
        &quot;maxContractMileage&quot;: {
          &quot;example&quot;: 180000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarPrize&quot;: {
          &quot;example&quot;: 57000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarPrice&quot;: {
          &quot;example&quot;: 57000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarNetPrice&quot;: {
          &quot;example&quot;: 57000,
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;totalCarGrossPrice&quot;: {
          &quot;example&quot;: 68400,
          &quot;type&quot;: &quot;integer&quot;
        }
      }
    },
    &quot;quoteDetails&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;items&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;example&quot;: &quot;downPaymentGrossAmount&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;label&quot;: {
            &quot;example&quot;: &quot;Acompte&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;example&quot;: 1000,
            &quot;type&quot;: &quot;number&quot;
          }
        }
      }
    },
    &quot;type_4&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;name&quot;
      ],
      &quot;properties&quot;: {
        &quot;rate&quot;: {
          &quot;description&quot;: &quot;Rate applied to the cost&quot;,
          &quot;example&quot;: 13,
          &quot;type&quot;: &quot;number&quot;
        },
        &quot;costType&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/type_6&quot;
        },
        &quot;description&quot;: {
          &quot;description&quot;: &quot;Description of the cost.&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;name&quot;: {
          &quot;description&quot;: &quot;Name of the cost.&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;paiementMethod&quot;: {
          &quot;description&quot;: &quot;Paiement Method&quot;,
          &quot;example&quot;: &quot;IN_CASH&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;grossAmount&quot;: {
          &quot;description&quot;: &quot;Amount of the cost (VAT INCLUDED).&quot;,
          &quot;example&quot;: 127400.13,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;netAmount&quot;: {
          &quot;description&quot;: &quot;Amount of the cost (VAT EXCLUDED).&quot;,
          &quot;example&quot;: 127400.13,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;currencyCode&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/currencyCodeType&quot;
        }
      }
    },
    &quot;description&quot;: {
      &quot;description&quot;: &quot;Description of the Financial Product&quot;,
      &quot;example&quot;: &quot;Lease financing&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;baremeCodes&quot;: {
      &quot;description&quot;: &quot;The bareme code is used by some front office tools to recover the tarification assigned to a specific financial product.&quot;,
      &quot;example&quot;: &quot;295&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;mileageUnit&quot;: {
      &quot;description&quot;: &quot;Mileage unit.&quot;,
      &quot;example&quot;: &quot;KILOMETERS&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;typeRate&quot;: {
      &quot;description&quot;: &quot;Type of rate.&quot;,
      &quot;enum&quot;: [
        &quot;INDEXED&quot;,
        &quot;FIXED&quot;
      ],
      &quot;example&quot;: &quot;FIXED&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;financialProductCategory&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;code&quot;: {
          &quot;description&quot;: &quot;Code of the financial product category.&quot;,
          &quot;example&quot;: &quot;VAT&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;name&quot;: {
          &quot;description&quot;: &quot;Name of the financial product category.&quot;,
          &quot;example&quot;: &quot;Credit&quot;,
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;annualMileageType&quot;: {
      &quot;description&quot;: &quot;Annual mileage for the duration of the contract&quot;,
      &quot;example&quot;: 20000,
      &quot;type&quot;: &quot;integer&quot;
    },
    &quot;durationType&quot;: {
      &quot;description&quot;: &quot;Duration (in month by default) of the installment&quot;,
      &quot;example&quot;: 36,
      &quot;type&quot;: &quot;integer&quot;
    },
    &quot;type_5&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;financialProductId&quot;: {
          &quot;example&quot;: &quot;A&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;name&quot;: {
          &quot;example&quot;: &quot;Garantie Perte Financière Bail&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;description&quot;: {
          &quot;example&quot;: &quot;GPFB&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;id&quot;: {
          &quot;example&quot;: &quot;PFI&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;selected&quot;: {
          &quot;example&quot;: false,
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;monthlyCost&quot;: {
          &quot;description&quot;: &quot;Monthly Cost to be paid at each installment (except first and last installments)&quot;,
          &quot;example&quot;: 127400.13,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;costGrossAmount&quot;: {
          &quot;description&quot;: &quot;Amount of the cost (VAT INCLUDED).&quot;,
          &quot;example&quot;: 127400.13,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        }
      }
    },
    &quot;type_6&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;rate&quot;: {
          &quot;description&quot;: &quot;Rate applied to the cost&quot;,
          &quot;example&quot;: 3.5,
          &quot;type&quot;: &quot;number&quot;,
          &quot;multipleOf&quot;: 0.01
        },
        &quot;name&quot;: {
          &quot;description&quot;: &quot;Name of the cost&quot;,
          &quot;example&quot;: &quot;IMPORTE COMISIÓN DE GASTOS DE FORMALIZACIÓN FINANCIADA&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;description&quot;: {
          &quot;description&quot;: &quot;Description of the cost&quot;,
          &quot;example&quot;: &quot;IMPORTE COMISIÓN DE GASTOS DE FORMALIZACIÓN FINANCIADA&quot;,
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;grossAmount&quot;: {
          &quot;description&quot;: &quot;Amount of the cost (VAT INCLUDED)&quot;,
          &quot;example&quot;: 127400.13,
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;currencyCode&quot;: {
          &quot;$ref&quot;: &quot;#/definitions/currencyCodeType&quot;
        }
      }
    }
  }
}</schema>
    <schemaType>OpenApi</schemaType>
    <status>Complete</status>
    <systemVersion>6</systemVersion>
</ExternalServiceRegistration>
